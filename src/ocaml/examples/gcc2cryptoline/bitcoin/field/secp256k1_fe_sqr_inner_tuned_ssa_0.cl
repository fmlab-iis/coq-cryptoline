proc main(uint64 a0_0, uint64 a1_0, uint64 a2_0, uint64 a3_0, uint64 a4_0) =
{ true && and [a0_0 <u 72057594037927928@64, a1_0 <u 72057594037927928@64, a2_0 <u 72057594037927928@64, a3_0 <u 72057594037927928@64, a4_0 <u 4503599627370488@64] }
mul v1_1 a0_0 2@uint64;
mulj v4_1 v1_1 a3_0;
mul v5_1 a1_0 2@uint64;
mulj v8_1 v5_1 a2_0;
add d66_1 v4_1 v8_1;
mulj c67_1 a4_0 a4_0;
join value_1 0@uint64 4503599627370495@uint64;
and v11_1@uint128 c67_1 value_1;
join value_2 0@uint64 68719492368@uint64;
mul v12_1 v11_1 value_2;
add d68_1 v12_1 d66_1;
split c69_1 tmp_to_use_1 c67_1 52;
assume tmp_to_use_1 = v11_1 && true;
cast v13_1@int64 d68_1;
and t370_1@int64 v13_1 4503599627370495@int64;
split d71_1 tmp_to_use_2 d68_1 52;
vpc tmp_to_use_p_1@uint64 tmp_to_use_2;
assume tmp_to_use_2 = t370_1 && true;
mul a472_1 a4_0 2@uint64;
mulj v16_1 a0_0 a472_1;
mulj v17_1 a3_0 v5_1;
add v18_1 v16_1 v17_1;
mulj v19_1 a2_0 a2_0;
add v20_1 v18_1 v19_1;
join value_3 0@uint64 68719492368@uint64;
mul v21_1 c69_1 value_3;
add v105_1 v20_1 v21_1;
add d74_1 d71_1 v105_1;
cast v22_1@int64 d74_1;
split d75_1 tmp_to_use1_1 d74_1 52;
split v10_1 tmp_to_use2_1 v22_1 48;
and tx76_1@int64 v10_1 15@int64;
vpc tmp_to_use1_p_1@uint64 tmp_to_use1_1;
assume tmp_to_use1_1 = (tx76_1 * 281474976710656) + tmp_to_use2_1 && true;
and t477_1@int64 v22_1 281474976710655@int64;
assume tmp_to_use2_1 = t477_1 && true;
mulj c78_1 a0_0 a0_0;
mulj v24_1 a472_1 a1_0;
mul v25_1 a2_0 2@uint64;
mulj v27_1 a3_0 v25_1;
add v28_1 v24_1 v27_1;
add d79_1 v28_1 d75_1;
cast v29_1@int64 d79_1;
split d80_1 tmp_to_use_3 d79_1 52;
split tmp1_1 tmp2_1 v29_1 60;
shl v65_1 tmp2_1 4;
and v30_1@int64 v65_1 72057594037927920@int64;
vpc tmp_to_use_p_2@uint64 tmp_to_use_3;
assume v30_1 = tmp_to_use_3 * 16 && true;
vpc v30_2@uint64 v30_1;
vpc tx76_2@uint64 tx76_1;
add u081_1 v30_2 tx76_2;
mulj v32_1 u081_1 4294968273@uint64;
add c82_1 v32_1 c78_1;
cast v33_1@uint64 c82_1;
and v34_1@uint64 v33_1 4503599627370495@uint64;
split c85_1 tmp_to_use_4 c82_1 52;
vpc tmp_to_use_p_3@uint64 tmp_to_use_4;
assume tmp_to_use_4 = v34_1 && true;
mulj v35_1 v1_1 a1_0;
mulj v36_1 a2_0 a472_1;
mulj v37_1 a3_0 a3_0;
add v38_1 v36_1 v37_1;
add d87_1 v38_1 d80_1;
join value_4 0@uint64 4503599627370495@uint64;
and v39_1@uint128 d87_1 value_4;
join value_5 0@uint64 68719492368@uint64;
mul v40_1 v39_1 value_5;
add v103_1 v35_1 v40_1;
add c88_1 c85_1 v103_1;
split d89_1 tmp_to_use_5 d87_1 52;
assume tmp_to_use_5 = v39_1 && true;
cast v41_1@uint64 c88_1;
and v42_1@uint64 v41_1 4503599627370495@uint64;
split c91_1 tmp_to_use_6 c88_1 52;
vpc tmp_to_use_p_4@uint64 tmp_to_use_6;
assume tmp_to_use_6 = v42_1 && true;
mulj v43_1 v1_1 a2_0;
mulj v44_1 a1_0 a1_0;
add v45_1 v43_1 v44_1;
mulj v46_1 a3_0 a472_1;
add d93_1 v46_1 d89_1;
join value_6 0@uint64 4503599627370495@uint64;
and v47_1@uint128 d93_1 value_6;
join value_7 0@uint64 68719492368@uint64;
mul v48_1 v47_1 value_7;
add v104_1 v45_1 v48_1;
add c94_1 c91_1 v104_1;
split d95_1 tmp_to_use_7 d93_1 52;
assume tmp_to_use_7 = v47_1 && true;
cast v49_1@uint64 c94_1;
and v50_1@uint64 v49_1 4503599627370495@uint64;
split c97_1 tmp_to_use_8 c94_1 52;
vpc tmp_to_use_p_5@uint64 tmp_to_use_8;
assume tmp_to_use_8 = v50_1 && true;
join value_8 0@uint64 68719492368@uint64;
mul v51_1 d95_1 value_8;
vpc v52_1@uint128 t370_1;
add v53_1 v51_1 v52_1;
add c98_1 v53_1 c97_1;
cast v54_1@uint64 c98_1;
and v55_1@uint64 v54_1 4503599627370495@uint64;
split c100_1 tmp_to_use_9 c98_1 52;
vpc tmp_to_use_p_6@uint64 tmp_to_use_9;
assume tmp_to_use_9 = v55_1 && true;
vpc v56_1@uint128 t477_1;
add c101_1 v56_1 c100_1;
vpc v57_1@uint64 c101_1;
{ v34_1 + (v42_1 * 4503599627370496) + (v50_1 * 20282409603651670423947251286016) + (v55_1 * 91343852333181432387730302044767688728495783936) + (v57_1 * 411376139330301510538742295639337626245683966408394965837152256) = (a0_0 + (a1_0 * 4503599627370496) + (a2_0 * 20282409603651670423947251286016) + (a3_0 * 91343852333181432387730302044767688728495783936) + (a4_0 * 411376139330301510538742295639337626245683966408394965837152256)) * (a0_0 + (a1_0 * 4503599627370496) + (a2_0 * 20282409603651670423947251286016) + (a3_0 * 91343852333181432387730302044767688728495783936) + (a4_0 * 411376139330301510538742295639337626245683966408394965837152256)) (mod 115792089237316195423570985008687907853269984665640564039457584007908834671663) && and [tmp_to_use_1 = v11_1, tmp_to_use_p_1 = t370_1, tmp_to_use1_p_1 = add (mul (tx76_1) (281474976710656@64)) (tmp_to_use2_1), tmp_to_use2_1 = t477_1, v30_1 = mul (tmp_to_use_p_2) (16@64), tmp_to_use_p_3 = v34_1, tmp_to_use_5 = v39_1, tmp_to_use_p_4 = v42_1, tmp_to_use_7 = v47_1, tmp_to_use_p_5 = v50_1, tmp_to_use_p_6 = v55_1, v34_1 <u 9007199254740991@64, v42_1 <u 9007199254740991@64, v50_1 <u 9007199254740991@64, v55_1 <u 9007199254740991@64, v57_1 <u 562949953421311@64] }