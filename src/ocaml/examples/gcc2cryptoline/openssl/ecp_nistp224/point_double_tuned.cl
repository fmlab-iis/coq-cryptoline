(*
Verified range and safety properties on frege.
Results of checking CNF formulas:       [OK]            4998.766160 seconds
Verification result:                    [OK]            5463.363788 seconds
*)
proc main(uint64 x0_0, uint64 x1_0, uint64 x2_0, uint64 x3_0, uint64 y0_0, uint64 y1_0, uint64 y2_0, uint64 y3_0, uint64 z0_0, uint64 z1_0, uint64 z2_0, uint64 z3_0) =
{ true && and [x0_0 <u 288230376151711744@64, x1_0 <u 288230376151711744@64, x2_0 <u 288230376151711744@64, x3_0 <u 288230376151711744@64, y0_0 <u 288230376151711744@64, y1_0 <u 288230376151711744@64, y2_0 <u 288230376151711744@64, y3_0 <u 288230376151711744@64, z0_0 <u 288230376151711744@64, z1_0 <u 288230376151711744@64, z2_0 <u 288230376151711744@64, z3_0 <u 288230376151711744@64] }
mov x_in2_0_1 x0_0;
mov x_in2_8_1 x1_0;
mov x_in2_16_1 x2_0;
mov x_in2_24_1 x3_0;
mov y_in6_0_1 y0_0;
mov y_in6_8_1 y1_0;
mov y_in6_16_1 y2_0;
mov y_in6_24_1 y3_0;
mov z_in3_0_1 z0_0;
mov z_in3_8_1 z1_0;
mov z_in3_16_1 z2_0;
mov z_in3_24_1 z3_0;
mov v162_1 x_in2_0_1;
mov v163_1 x_in2_8_1;
mov v164_1 x_in2_16_1;
mov v165_1 x_in2_24_1;
mov v472_1 z_in3_0_1;
mul tmp0473_1 v472_1 2@uint64;
mov v474_1 z_in3_8_1;
mul tmp1475_1 v474_1 2@uint64;
mov v476_1 z_in3_16_1;
mul tmp2477_1 v476_1 2@uint64;
mulj v479_1 v472_1 v472_1;
mov tmp_0_1 v479_1;
mulj v481_1 v472_1 tmp1475_1;
mov tmp_16_1 v481_1;
mulj v483_1 v472_1 tmp2477_1;
mulj v485_1 v474_1 v474_1;
add v486_1 v483_1 v485_1;
mov tmp_32_1 v486_1;
mov v487_1 z_in3_24_1;
mulj v490_1 v487_1 tmp0473_1;
mulj v491_1 tmp2477_1 v474_1;
add v492_1 v490_1 v491_1;
mov tmp_48_1 v492_1;
mulj v493_1 tmp1475_1 v487_1;
mulj v495_1 v476_1 v476_1;
add v496_1 v493_1 v495_1;
mov tmp_64_1 v496_1;
mulj v497_1 tmp2477_1 v487_1;
mov tmp_80_1 v497_1;
mulj v498_1 v487_1 v487_1;
mov tmp_96_1 v498_1;
mov in54_0_1 tmp_0_1;
mov in54_16_1 tmp_16_1;
mov in54_32_1 tmp_32_1;
mov in54_48_1 tmp_48_1;
mov in54_64_1 tmp_64_1;
mov in54_80_1 tmp_80_1;
mov in54_96_1 tmp_96_1;
mov v1_1 in54_0_1;
mov value_lo_1 32768@uint64;
mov value_hi_1 9223372036854775808@uint64;
join value_1 value_hi_1 value_lo_1;
add v2_1 v1_1 value_1;
mov v3_1 in54_16_1;
mov value_lo_2 18410715276690587648@uint64;
mov value_hi_2 9223372036854775679@uint64;
join value_2 value_hi_2 value_lo_2;
add v4_1 v3_1 value_2;
mov v5_1 in54_32_1;
mov value_lo_3 0@uint64;
mov value_hi_3 9223372036854775680@uint64;
join value_3 value_hi_3 value_lo_3;
add v6_1 v5_1 value_3;
mov v7_1 in54_48_1;
mov v8_1 in54_64_1;
mov v9_1 in54_96_1;
split v10_1 tmp_to_use_1 v9_1 16;
add v11_1 v8_1 v10_1;
split tmp1_1 tmp2_1 v9_1 88;
shl v12_1 tmp2_1 40;
mov value_lo_4 72056494526300160@uint64;
mov value_hi_4 0@uint64;
join value_4 value_hi_4 value_lo_4;
and v13_1@uint128 v12_1 value_4;
assume v13_1 = tmp_to_use_1 * 1099511627776 && true;
sub v15_1 v6_1 v9_1;
mov v16_1 in54_80_1;
split v17_1 tmp_to_use_2 v16_1 16;
add v64_1 v7_1 v17_1;
add v18_1 v13_1 v64_1;
split tmp1_2 tmp2_2 v16_1 88;
shl v19_1 tmp2_2 40;
mov value_lo_5 72056494526300160@uint64;
mov value_hi_5 0@uint64;
join value_5 value_hi_5 value_lo_5;
and v20_1@uint128 v19_1 value_5;
assume v20_1 = tmp_to_use_2 * 1099511627776 && true;
add v21_1 v15_1 v20_1;
sub v22_1 v4_1 v16_1;
split v23_1 tmp_to_use_3 v11_1 16;
add v24_1 v21_1 v23_1;
split tmp1_3 tmp2_3 v11_1 88;
shl v25_1 tmp2_3 40;
mov value_lo_6 72056494526300160@uint64;
mov value_hi_6 0@uint64;
join value_6 value_hi_6 value_lo_6;
and v26_1@uint128 v25_1 value_6;
assume v26_1 = tmp_to_use_3 * 1099511627776 && true;
add v27_1 v22_1 v26_1;
sub v28_1 v2_1 v11_1;
split v29_1 tmp_to_use_4 v24_1 56;
add v30_1 v18_1 v29_1;
mov value_lo_7 72057594037927935@uint64;
mov value_hi_7 0@uint64;
join value_7 value_hi_7 value_lo_7;
and v31_1@uint128 v24_1 value_7;
assume v31_1 = tmp_to_use_4 && true;
split v32_1 tmp_to_use_5 v30_1 56;
mov value_lo_8 72057594037927935@uint64;
mov value_hi_8 0@uint64;
join value_8 value_hi_8 value_lo_8;
and v33_1@uint128 v30_1 value_8;
assume v33_1 = tmp_to_use_5 && true;
split v34_1 tmp_to_use_6 v30_1 72;
add v35_1 v31_1 v34_1;
split tmp1_4 tmp2_4 v32_1 88;
shl v36_1 tmp2_4 40;
mov value_lo_9 72056494526300160@uint64;
mov value_hi_9 0@uint64;
join value_9 value_hi_9 value_lo_9;
and v37_1@uint128 v36_1 value_9;
assume v37_1 + (v34_1 * 1099511627776 * 65536) = v32_1 * 1099511627776 && true;
add v38_1 v27_1 v37_1;
sub v39_1 v28_1 v32_1;
split v40_1 tmp_to_use_7 v39_1 56;
add v41_1 v38_1 v40_1;
cast v42_1@uint64 v39_1;
and v43_1@uint64 v42_1 72057594037927935@uint64;
vpc tmp_to_use_p_1@uint64 tmp_to_use_7;
assume v43_1 = tmp_to_use_7 && true;
mov out55_0_1 v43_1;
split v44_1 tmp_to_use_8 v41_1 56;
add v45_1 v35_1 v44_1;
cast v46_1@uint64 v41_1;
and v47_1@uint64 v46_1 72057594037927935@uint64;
vpc tmp_to_use_p_2@uint64 tmp_to_use_8;
assume v47_1 = tmp_to_use_8 && true;
mov out55_8_1 v47_1;
split v48_1 tmp_to_use_9 v45_1 56;
add v49_1 v33_1 v48_1;
cast v50_1@uint64 v45_1;
and v51_1@uint64 v50_1 72057594037927935@uint64;
vpc tmp_to_use_p_3@uint64 tmp_to_use_9;
assume v51_1 = tmp_to_use_9 && true;
mov out55_16_1 v51_1;
vpc v52_1@uint64 v49_1;
mov out55_24_1 v52_1;
mov delta_0_1 out55_0_1;
mov delta_8_1 out55_8_1;
mov delta_16_1 out55_16_1;
mov delta_24_1 out55_24_1;
mov delta0_0_1 delta_0_1;
mov delta0_1_1 delta_8_1;
mov delta0_2_1 delta_16_1;
mov delta0_3_1 delta_24_1;
mov v445_1 y_in6_0_1;
mul tmp0446_1 v445_1 2@uint64;
mov v447_1 y_in6_8_1;
mul tmp1448_1 v447_1 2@uint64;
mov v449_1 y_in6_16_1;
mul tmp2450_1 v449_1 2@uint64;
mulj v452_1 v445_1 v445_1;
mov tmp_0_2 v452_1;
mulj v454_1 v445_1 tmp1448_1;
mov tmp_16_2 v454_1;
mulj v456_1 v445_1 tmp2450_1;
mulj v458_1 v447_1 v447_1;
add v459_1 v456_1 v458_1;
mov tmp_32_2 v459_1;
mov v460_1 y_in6_24_1;
mulj v463_1 v460_1 tmp0446_1;
mulj v464_1 tmp2450_1 v447_1;
add v465_1 v463_1 v464_1;
mov tmp_48_2 v465_1;
mulj v466_1 tmp1448_1 v460_1;
mulj v468_1 v449_1 v449_1;
add v469_1 v466_1 v468_1;
mov tmp_64_2 v469_1;
mulj v470_1 tmp2450_1 v460_1;
mov tmp_80_2 v470_1;
mulj v471_1 v460_1 v460_1;
mov tmp_96_2 v471_1;
mov in54_0_2 tmp_0_2;
mov in54_16_2 tmp_16_2;
mov in54_32_2 tmp_32_2;
mov in54_48_2 tmp_48_2;
mov in54_64_2 tmp_64_2;
mov in54_80_2 tmp_80_2;
mov in54_96_2 tmp_96_2;
mov v1_2 in54_0_2;
mov value_lo_10 32768@uint64;
mov value_hi_10 9223372036854775808@uint64;
join value_10 value_hi_10 value_lo_10;
add v2_2 v1_2 value_10;
mov v3_2 in54_16_2;
mov value_lo_11 18410715276690587648@uint64;
mov value_hi_11 9223372036854775679@uint64;
join value_11 value_hi_11 value_lo_11;
add v4_2 v3_2 value_11;
mov v5_2 in54_32_2;
mov value_lo_12 0@uint64;
mov value_hi_12 9223372036854775680@uint64;
join value_12 value_hi_12 value_lo_12;
add v6_2 v5_2 value_12;
mov v7_2 in54_48_2;
mov v8_2 in54_64_2;
mov v9_2 in54_96_2;
split v10_2 tmp_to_use_10 v9_2 16;
add v11_2 v8_2 v10_2;
split tmp1_5 tmp2_5 v9_2 88;
shl v12_2 tmp2_5 40;
mov value_lo_13 72056494526300160@uint64;
mov value_hi_13 0@uint64;
join value_13 value_hi_13 value_lo_13;
and v13_2@uint128 v12_2 value_13;
assume v13_2 = tmp_to_use_10 * 1099511627776 && true;
sub v15_2 v6_2 v9_2;
mov v16_2 in54_80_2;
split v17_2 tmp_to_use_11 v16_2 16;
add v64_2 v7_2 v17_2;
add v18_2 v13_2 v64_2;
split tmp1_6 tmp2_6 v16_2 88;
shl v19_2 tmp2_6 40;
mov value_lo_14 72056494526300160@uint64;
mov value_hi_14 0@uint64;
join value_14 value_hi_14 value_lo_14;
and v20_2@uint128 v19_2 value_14;
assume v20_2 = tmp_to_use_11 * 1099511627776 && true;
add v21_2 v15_2 v20_2;
sub v22_2 v4_2 v16_2;
split v23_2 tmp_to_use_12 v11_2 16;
add v24_2 v21_2 v23_2;
split tmp1_7 tmp2_7 v11_2 88;
shl v25_2 tmp2_7 40;
mov value_lo_15 72056494526300160@uint64;
mov value_hi_15 0@uint64;
join value_15 value_hi_15 value_lo_15;
and v26_2@uint128 v25_2 value_15;
assume v26_2 = tmp_to_use_12 * 1099511627776 && true;
add v27_2 v22_2 v26_2;
sub v28_2 v2_2 v11_2;
split v29_2 tmp_to_use_13 v24_2 56;
add v30_2 v18_2 v29_2;
mov value_lo_16 72057594037927935@uint64;
mov value_hi_16 0@uint64;
join value_16 value_hi_16 value_lo_16;
and v31_2@uint128 v24_2 value_16;
assume v31_2 = tmp_to_use_13 && true;
split v32_2 tmp_to_use_14 v30_2 56;
mov value_lo_17 72057594037927935@uint64;
mov value_hi_17 0@uint64;
join value_17 value_hi_17 value_lo_17;
and v33_2@uint128 v30_2 value_17;
assume v33_2 = tmp_to_use_14 && true;
split v34_2 tmp_to_use_15 v30_2 72;
add v35_2 v31_2 v34_2;
split tmp1_8 tmp2_8 v32_2 88;
shl v36_2 tmp2_8 40;
mov value_lo_18 72056494526300160@uint64;
mov value_hi_18 0@uint64;
join value_18 value_hi_18 value_lo_18;
and v37_2@uint128 v36_2 value_18;
assume v37_2 + (v34_2 * 1099511627776 * 65536) = v32_2 * 1099511627776 && true;
add v38_2 v27_2 v37_2;
sub v39_2 v28_2 v32_2;
split v40_2 tmp_to_use_16 v39_2 56;
add v41_2 v38_2 v40_2;
cast v42_2@uint64 v39_2;
and v43_2@uint64 v42_2 72057594037927935@uint64;
vpc tmp_to_use_p_4@uint64 tmp_to_use_16;
assume v43_2 = tmp_to_use_16 && true;
mov out55_0_2 v43_2;
split v44_2 tmp_to_use_17 v41_2 56;
add v45_2 v35_2 v44_2;
cast v46_2@uint64 v41_2;
and v47_2@uint64 v46_2 72057594037927935@uint64;
vpc tmp_to_use_p_5@uint64 tmp_to_use_17;
assume v47_2 = tmp_to_use_17 && true;
mov out55_8_2 v47_2;
split v48_2 tmp_to_use_18 v45_2 56;
add v49_2 v33_2 v48_2;
cast v50_2@uint64 v45_2;
and v51_2@uint64 v50_2 72057594037927935@uint64;
vpc tmp_to_use_p_6@uint64 tmp_to_use_18;
assume v51_2 = tmp_to_use_18 && true;
mov out55_16_2 v51_2;
vpc v52_2@uint64 v49_2;
mov out55_24_2 v52_2;
mov gamma_0_1 out55_0_2;
mov gamma_8_1 out55_8_2;
mov gamma_16_1 out55_16_2;
mov gamma_24_1 out55_24_2;
mov gamma0_0_1 gamma_0_1;
mov gamma0_1_1 gamma_8_1;
mov gamma0_2_1 gamma_16_1;
mov gamma0_3_1 gamma_24_1;
mov v404_1 x_in2_0_1;
mov v406_1 gamma_0_1;
mulj v408_1 v404_1 v406_1;
mov tmp_0_3 v408_1;
mov v409_1 gamma_8_1;
mulj v411_1 v404_1 v409_1;
mov v412_1 x_in2_8_1;
mulj v414_1 v406_1 v412_1;
add v415_1 v411_1 v414_1;
mov tmp_16_3 v415_1;
mov v416_1 gamma_16_1;
mulj v418_1 v404_1 v416_1;
mulj v419_1 v409_1 v412_1;
add v420_1 v418_1 v419_1;
mov v421_1 x_in2_16_1;
mulj v423_1 v406_1 v421_1;
add v424_1 v420_1 v423_1;
mov tmp_32_3 v424_1;
mov v425_1 gamma_24_1;
mulj v427_1 v404_1 v425_1;
mulj v428_1 v412_1 v416_1;
add v211_1 v427_1 v428_1;
mov v430_1 x_in2_24_1;
mulj v432_1 v406_1 v430_1;
mulj v433_1 v409_1 v421_1;
add v212_1 v211_1 v432_1;
add v435_1 v212_1 v433_1;
mov tmp_48_3 v435_1;
mulj v436_1 v412_1 v425_1;
mulj v437_1 v416_1 v421_1;
add v438_1 v436_1 v437_1;
mulj v439_1 v409_1 v430_1;
add v440_1 v438_1 v439_1;
mov tmp_64_3 v440_1;
mulj v441_1 v421_1 v425_1;
mulj v442_1 v416_1 v430_1;
add v443_1 v441_1 v442_1;
mov tmp_80_3 v443_1;
mulj v444_1 v425_1 v430_1;
mov tmp_96_3 v444_1;
mov in54_0_3 tmp_0_3;
mov in54_16_3 tmp_16_3;
mov in54_32_3 tmp_32_3;
mov in54_48_3 tmp_48_3;
mov in54_64_3 tmp_64_3;
mov in54_80_3 tmp_80_3;
mov in54_96_3 tmp_96_3;
mov v1_3 in54_0_3;
mov value_lo_19 32768@uint64;
mov value_hi_19 9223372036854775808@uint64;
join value_19 value_hi_19 value_lo_19;
add v2_3 v1_3 value_19;
mov v3_3 in54_16_3;
mov value_lo_20 18410715276690587648@uint64;
mov value_hi_20 9223372036854775679@uint64;
join value_20 value_hi_20 value_lo_20;
add v4_3 v3_3 value_20;
mov v5_3 in54_32_3;
mov value_lo_21 0@uint64;
mov value_hi_21 9223372036854775680@uint64;
join value_21 value_hi_21 value_lo_21;
add v6_3 v5_3 value_21;
mov v7_3 in54_48_3;
mov v8_3 in54_64_3;
mov v9_3 in54_96_3;
split v10_3 tmp_to_use_19 v9_3 16;
add v11_3 v8_3 v10_3;
split tmp1_9 tmp2_9 v9_3 88;
shl v12_3 tmp2_9 40;
mov value_lo_22 72056494526300160@uint64;
mov value_hi_22 0@uint64;
join value_22 value_hi_22 value_lo_22;
and v13_3@uint128 v12_3 value_22;
assume v13_3 = tmp_to_use_19 * 1099511627776 && true;
sub v15_3 v6_3 v9_3;
mov v16_3 in54_80_3;
split v17_3 tmp_to_use_20 v16_3 16;
add v64_3 v7_3 v17_3;
add v18_3 v13_3 v64_3;
split tmp1_10 tmp2_10 v16_3 88;
shl v19_3 tmp2_10 40;
mov value_lo_23 72056494526300160@uint64;
mov value_hi_23 0@uint64;
join value_23 value_hi_23 value_lo_23;
and v20_3@uint128 v19_3 value_23;
assume v20_3 = tmp_to_use_20 * 1099511627776 && true;
add v21_3 v15_3 v20_3;
sub v22_3 v4_3 v16_3;
split v23_3 tmp_to_use_21 v11_3 16;
add v24_3 v21_3 v23_3;
split tmp1_11 tmp2_11 v11_3 88;
shl v25_3 tmp2_11 40;
mov value_lo_24 72056494526300160@uint64;
mov value_hi_24 0@uint64;
join value_24 value_hi_24 value_lo_24;
and v26_3@uint128 v25_3 value_24;
assume v26_3 = tmp_to_use_21 * 1099511627776 && true;
add v27_3 v22_3 v26_3;
sub v28_3 v2_3 v11_3;
split v29_3 tmp_to_use_22 v24_3 56;
add v30_3 v18_3 v29_3;
mov value_lo_25 72057594037927935@uint64;
mov value_hi_25 0@uint64;
join value_25 value_hi_25 value_lo_25;
and v31_3@uint128 v24_3 value_25;
assume v31_3 = tmp_to_use_22 && true;
split v32_3 tmp_to_use_23 v30_3 56;
mov value_lo_26 72057594037927935@uint64;
mov value_hi_26 0@uint64;
join value_26 value_hi_26 value_lo_26;
and v33_3@uint128 v30_3 value_26;
assume v33_3 = tmp_to_use_23 && true;
split v34_3 tmp_to_use_24 v30_3 72;
add v35_3 v31_3 v34_3;
split tmp1_12 tmp2_12 v32_3 88;
shl v36_3 tmp2_12 40;
mov value_lo_27 72056494526300160@uint64;
mov value_hi_27 0@uint64;
join value_27 value_hi_27 value_lo_27;
and v37_3@uint128 v36_3 value_27;
assume v37_3 + (v34_3 * 1099511627776 * 65536) = v32_3 * 1099511627776 && true;
add v38_3 v27_3 v37_3;
sub v39_3 v28_3 v32_3;
split v40_3 tmp_to_use_25 v39_3 56;
add v41_3 v38_3 v40_3;
cast v42_3@uint64 v39_3;
and v43_3@uint64 v42_3 72057594037927935@uint64;
vpc tmp_to_use_p_7@uint64 tmp_to_use_25;
assume v43_3 = tmp_to_use_25 && true;
mov out55_0_3 v43_3;
split v44_3 tmp_to_use_26 v41_3 56;
add v45_3 v35_3 v44_3;
cast v46_3@uint64 v41_3;
and v47_3@uint64 v46_3 72057594037927935@uint64;
vpc tmp_to_use_p_8@uint64 tmp_to_use_26;
assume v47_3 = tmp_to_use_26 && true;
mov out55_8_3 v47_3;
split v48_3 tmp_to_use_27 v45_3 56;
add v49_3 v33_3 v48_3;
cast v50_3@uint64 v45_3;
and v51_3@uint64 v50_3 72057594037927935@uint64;
vpc tmp_to_use_p_9@uint64 tmp_to_use_27;
assume v51_3 = tmp_to_use_27 && true;
mov out55_16_3 v51_3;
vpc v52_3@uint64 v49_3;
mov out55_24_3 v52_3;
mov beta_0_1 out55_0_3;
mov beta_8_1 out55_8_3;
mov beta_16_1 out55_16_3;
mov beta_24_1 out55_24_3;
mov beta0_0_1 beta_0_1;
mov beta0_1_1 beta_8_1;
mov beta0_2_1 beta_16_1;
mov beta0_3_1 beta_24_1;
mov v154_1 delta_0_1;
sub v209_1 288230376151711748@uint64 v154_1;
add v155_1 v162_1 v209_1;
mov v156_1 delta_8_1;
sub v208_1 288225978105200636@uint64 v156_1;
add v157_1 v163_1 v208_1;
mov v158_1 delta_16_1;
sub v207_1 288230376151711740@uint64 v158_1;
add v159_1 v164_1 v207_1;
mov v160_1 delta_24_1;
sub v206_1 288230376151711740@uint64 v160_1;
add v161_1 v165_1 v206_1;
add v139_1 v154_1 v162_1;
add v141_1 v156_1 v163_1;
add v143_1 v158_1 v164_1;
add v145_1 v160_1 v165_1;
mul v134_1 v139_1 3@uint64;
mul v135_1 v141_1 3@uint64;
mul v136_1 v143_1 3@uint64;
mul v137_1 v145_1 3@uint64;
mulj v367_1 v155_1 v134_1;
mov tmp_0_4 v367_1;
mulj v370_1 v155_1 v135_1;
mulj v373_1 v134_1 v157_1;
add v374_1 v370_1 v373_1;
mov tmp_16_4 v374_1;
mulj v377_1 v155_1 v136_1;
mulj v378_1 v135_1 v157_1;
add v379_1 v377_1 v378_1;
mulj v382_1 v134_1 v159_1;
add v383_1 v379_1 v382_1;
mov tmp_32_4 v383_1;
mulj v386_1 v155_1 v137_1;
mulj v387_1 v157_1 v136_1;
add v553_1 v386_1 v387_1;
mulj v391_1 v134_1 v161_1;
mulj v392_1 v135_1 v159_1;
add v554_1 v391_1 v553_1;
add v394_1 v392_1 v554_1;
mov tmp_48_4 v394_1;
mulj v395_1 v157_1 v137_1;
mulj v396_1 v136_1 v159_1;
add v397_1 v395_1 v396_1;
mulj v398_1 v135_1 v161_1;
add v399_1 v397_1 v398_1;
mov tmp_64_4 v399_1;
mulj v400_1 v159_1 v137_1;
mulj v401_1 v136_1 v161_1;
add v402_1 v400_1 v401_1;
mov tmp_80_4 v402_1;
mulj v403_1 v137_1 v161_1;
mov tmp_96_4 v403_1;
mov in54_0_4 tmp_0_4;
mov in54_16_4 tmp_16_4;
mov in54_32_4 tmp_32_4;
mov in54_48_4 tmp_48_4;
mov in54_64_4 tmp_64_4;
mov in54_80_4 tmp_80_4;
mov in54_96_4 tmp_96_4;
mov v1_4 in54_0_4;
mov value_lo_28 32768@uint64;
mov value_hi_28 9223372036854775808@uint64;
join value_28 value_hi_28 value_lo_28;
add v2_4 v1_4 value_28;
mov v3_4 in54_16_4;
mov value_lo_29 18410715276690587648@uint64;
mov value_hi_29 9223372036854775679@uint64;
join value_29 value_hi_29 value_lo_29;
add v4_4 v3_4 value_29;
mov v5_4 in54_32_4;
mov value_lo_30 0@uint64;
mov value_hi_30 9223372036854775680@uint64;
join value_30 value_hi_30 value_lo_30;
add v6_4 v5_4 value_30;
mov v7_4 in54_48_4;
mov v8_4 in54_64_4;
mov v9_4 in54_96_4;
split v10_4 tmp_to_use_28 v9_4 16;
add v11_4 v8_4 v10_4;
split tmp1_13 tmp2_13 v9_4 88;
shl v12_4 tmp2_13 40;
mov value_lo_31 72056494526300160@uint64;
mov value_hi_31 0@uint64;
join value_31 value_hi_31 value_lo_31;
and v13_4@uint128 v12_4 value_31;
assume v13_4 = tmp_to_use_28 * 1099511627776 && true;
sub v15_4 v6_4 v9_4;
mov v16_4 in54_80_4;
split v17_4 tmp_to_use_29 v16_4 16;
add v64_4 v7_4 v17_4;
add v18_4 v13_4 v64_4;
split tmp1_14 tmp2_14 v16_4 88;
shl v19_4 tmp2_14 40;
mov value_lo_32 72056494526300160@uint64;
mov value_hi_32 0@uint64;
join value_32 value_hi_32 value_lo_32;
and v20_4@uint128 v19_4 value_32;
assume v20_4 = tmp_to_use_29 * 1099511627776 && true;
add v21_4 v15_4 v20_4;
sub v22_4 v4_4 v16_4;
split v23_4 tmp_to_use_30 v11_4 16;
add v24_4 v21_4 v23_4;
split tmp1_15 tmp2_15 v11_4 88;
shl v25_4 tmp2_15 40;
mov value_lo_33 72056494526300160@uint64;
mov value_hi_33 0@uint64;
join value_33 value_hi_33 value_lo_33;
and v26_4@uint128 v25_4 value_33;
assume v26_4 = tmp_to_use_30 * 1099511627776 && true;
add v27_4 v22_4 v26_4;
sub v28_4 v2_4 v11_4;
split v29_4 tmp_to_use_31 v24_4 56;
add v30_4 v18_4 v29_4;
mov value_lo_34 72057594037927935@uint64;
mov value_hi_34 0@uint64;
join value_34 value_hi_34 value_lo_34;
and v31_4@uint128 v24_4 value_34;
assume v31_4 = tmp_to_use_31 && true;
split v32_4 tmp_to_use_32 v30_4 56;
mov value_lo_35 72057594037927935@uint64;
mov value_hi_35 0@uint64;
join value_35 value_hi_35 value_lo_35;
and v33_4@uint128 v30_4 value_35;
assume v33_4 = tmp_to_use_32 && true;
split v34_4 tmp_to_use_33 v30_4 72;
add v35_4 v31_4 v34_4;
split tmp1_16 tmp2_16 v32_4 88;
shl v36_4 tmp2_16 40;
mov value_lo_36 72056494526300160@uint64;
mov value_hi_36 0@uint64;
join value_36 value_hi_36 value_lo_36;
and v37_4@uint128 v36_4 value_36;
assume v37_4 + (v34_4 * 1099511627776 * 65536) = v32_4 * 1099511627776 && true;
add v38_4 v27_4 v37_4;
sub v39_4 v28_4 v32_4;
split v40_4 tmp_to_use_34 v39_4 56;
add v41_4 v38_4 v40_4;
cast v42_4@uint64 v39_4;
and v43_4@uint64 v42_4 72057594037927935@uint64;
vpc tmp_to_use_p_10@uint64 tmp_to_use_34;
assume v43_4 = tmp_to_use_34 && true;
mov out55_0_4 v43_4;
split v44_4 tmp_to_use_35 v41_4 56;
add v45_4 v35_4 v44_4;
cast v46_4@uint64 v41_4;
and v47_4@uint64 v46_4 72057594037927935@uint64;
vpc tmp_to_use_p_11@uint64 tmp_to_use_35;
assume v47_4 = tmp_to_use_35 && true;
mov out55_8_4 v47_4;
split v48_4 tmp_to_use_36 v45_4 56;
add v49_4 v33_4 v48_4;
cast v50_4@uint64 v45_4;
and v51_4@uint64 v50_4 72057594037927935@uint64;
vpc tmp_to_use_p_12@uint64 tmp_to_use_36;
assume v51_4 = tmp_to_use_36 && true;
mov out55_16_4 v51_4;
vpc v52_4@uint64 v49_4;
mov out55_24_4 v52_4;
mov alpha_0_1 out55_0_4;
mov alpha_8_1 out55_8_4;
mov alpha_16_1 out55_16_4;
mov alpha_24_1 out55_24_4;
mov alpha0_0_1 alpha_0_1;
mov alpha0_1_1 alpha_8_1;
mov alpha0_2_1 alpha_16_1;
mov alpha0_3_1 alpha_24_1;
//ecut and [delta0_0_1 + (delta0_1_1 * 72057594037927936) + (delta0_2_1 * 5192296858534827628530496329220096) + (delta0_3_1 * 374144419156711147060143317175368453031918731001856) = (z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)) * (z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)) (mod 26959946667150639794667015087019630673637144422540572481103610249216 - 79228162514264337593543950336 + 1), gamma0_0_1 + (gamma0_1_1 * 72057594037927936) + (gamma0_2_1 * 5192296858534827628530496329220096) + (gamma0_3_1 * 374144419156711147060143317175368453031918731001856) = (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856)) * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856)) (mod 26959946667150639794667015087019630673637144422540572481103610249216 - 79228162514264337593543950336 + 1), beta0_0_1 + (beta0_1_1 * 72057594037927936) + (beta0_2_1 * 5192296858534827628530496329220096) + (beta0_3_1 * 374144419156711147060143317175368453031918731001856) = (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856)) * (gamma0_0_1 + (gamma0_1_1 * 72057594037927936) + (gamma0_2_1 * 5192296858534827628530496329220096) + (gamma0_3_1 * 374144419156711147060143317175368453031918731001856)) (mod 26959946667150639794667015087019630673637144422540572481103610249216 - 79228162514264337593543950336 + 1), alpha0_0_1 + (alpha0_1_1 * 72057594037927936) + (alpha0_2_1 * 5192296858534827628530496329220096) + (alpha0_3_1 * 374144419156711147060143317175368453031918731001856) = 3 * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856) - (delta0_0_1 + (delta0_1_1 * 72057594037927936) + (delta0_2_1 * 5192296858534827628530496329220096) + (delta0_3_1 * 374144419156711147060143317175368453031918731001856))) * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856) + delta0_0_1 + (delta0_1_1 * 72057594037927936) + (delta0_2_1 * 5192296858534827628530496329220096) + (delta0_3_1 * 374144419156711147060143317175368453031918731001856)) (mod 26959946667150639794667015087019630673637144422540572481103610249216 - 79228162514264337593543950336 + 1)];
mov v336_1 alpha_0_1;
mul tmp0337_1 v336_1 2@uint64;
mov v338_1 alpha_8_1;
mul tmp1339_1 v338_1 2@uint64;
mov v340_1 alpha_16_1;
mul tmp2341_1 v340_1 2@uint64;
mulj v343_1 v336_1 v336_1;
mulj v345_1 v336_1 tmp1339_1;
mulj v347_1 v336_1 tmp2341_1;
mulj v349_1 v338_1 v338_1;
add v550_1 v349_1 18446744073709551360@uint128;
mov v351_1 alpha_24_1;
mulj v354_1 v351_1 tmp0337_1;
mulj v355_1 tmp2341_1 v338_1;
add v356_1 v354_1 v355_1;
mulj v357_1 tmp1339_1 v351_1;
mulj v359_1 v340_1 v340_1;
add v360_1 v357_1 v359_1;
mov tmp_64_5 v360_1;
mulj v361_1 tmp2341_1 v351_1;
mov tmp_80_5 v361_1;
mulj v362_1 v351_1 v351_1;
mov tmp_96_5 v362_1;
mov v130_1 beta_0_1;
mov v131_1 beta_8_1;
mov v132_1 beta_16_1;
mov v133_1 beta_24_1;
mul v126_1 v130_1 8@uint64;
mul v127_1 v131_1 8@uint64;
mul v128_1 v132_1 8@uint64;
mul v129_1 v133_1 8@uint64;
add v111_1 v343_1 18446744073709551872@uint128;
add v115_1 v347_1 v550_1;
add v117_1 v356_1 18446744073709551360@uint128;
vpc v118_1@uint128 v126_1;
sub v119_1 v111_1 v118_1;
mov tmp_0_5 v119_1;
vpc v120_1@uint128 v127_1;
subb carry_1_1 v551_1 v345_1 v120_1;
adds carry_2_1 v121_1 v551_1 18446462598732840704@uint128;
assume carry_1_1 = carry_2_1 && true;
mov tmp_16_5 v121_1;
vpc v122_1@uint128 v128_1;
sub v123_1 v115_1 v122_1;
mov tmp_32_5 v123_1;
vpc v124_1@uint128 v129_1;
sub v125_1 v117_1 v124_1;
mov tmp_48_5 v125_1;
mov in54_0_5 tmp_0_5;
mov in54_16_5 tmp_16_5;
mov in54_32_5 tmp_32_5;
mov in54_48_5 tmp_48_5;
mov in54_64_5 tmp_64_5;
mov in54_80_5 tmp_80_5;
mov in54_96_5 tmp_96_5;
mov v1_5 in54_0_5;
mov value_lo_37 32768@uint64;
mov value_hi_37 9223372036854775808@uint64;
join value_37 value_hi_37 value_lo_37;
add v2_5 v1_5 value_37;
mov v3_5 in54_16_5;
mov value_lo_38 18410715276690587648@uint64;
mov value_hi_38 9223372036854775679@uint64;
join value_38 value_hi_38 value_lo_38;
add v4_5 v3_5 value_38;
mov v5_5 in54_32_5;
mov value_lo_39 0@uint64;
mov value_hi_39 9223372036854775680@uint64;
join value_39 value_hi_39 value_lo_39;
add v6_5 v5_5 value_39;
mov v7_5 in54_48_5;
mov v8_5 in54_64_5;
mov v9_5 in54_96_5;
split v10_5 tmp_to_use_37 v9_5 16;
add v11_5 v8_5 v10_5;
split tmp1_17 tmp2_17 v9_5 88;
shl v12_5 tmp2_17 40;
mov value_lo_40 72056494526300160@uint64;
mov value_hi_40 0@uint64;
join value_40 value_hi_40 value_lo_40;
and v13_5@uint128 v12_5 value_40;
assume v13_5 = tmp_to_use_37 * 1099511627776 && true;
sub v15_5 v6_5 v9_5;
mov v16_5 in54_80_5;
split v17_5 tmp_to_use_38 v16_5 16;
add v64_5 v7_5 v17_5;
add v18_5 v13_5 v64_5;
split tmp1_18 tmp2_18 v16_5 88;
shl v19_5 tmp2_18 40;
mov value_lo_41 72056494526300160@uint64;
mov value_hi_41 0@uint64;
join value_41 value_hi_41 value_lo_41;
and v20_5@uint128 v19_5 value_41;
assume v20_5 = tmp_to_use_38 * 1099511627776 && true;
add v21_5 v15_5 v20_5;
sub v22_5 v4_5 v16_5;
split v23_5 tmp_to_use_39 v11_5 16;
add v24_5 v21_5 v23_5;
split tmp1_19 tmp2_19 v11_5 88;
shl v25_5 tmp2_19 40;
mov value_lo_42 72056494526300160@uint64;
mov value_hi_42 0@uint64;
join value_42 value_hi_42 value_lo_42;
and v26_5@uint128 v25_5 value_42;
assume v26_5 = tmp_to_use_39 * 1099511627776 && true;
add v27_5 v22_5 v26_5;
sub v28_5 v2_5 v11_5;
split v29_5 tmp_to_use_40 v24_5 56;
add v30_5 v18_5 v29_5;
mov value_lo_43 72057594037927935@uint64;
mov value_hi_43 0@uint64;
join value_43 value_hi_43 value_lo_43;
and v31_5@uint128 v24_5 value_43;
assume v31_5 = tmp_to_use_40 && true;
split v32_5 tmp_to_use_41 v30_5 56;
mov value_lo_44 72057594037927935@uint64;
mov value_hi_44 0@uint64;
join value_44 value_hi_44 value_lo_44;
and v33_5@uint128 v30_5 value_44;
assume v33_5 = tmp_to_use_41 && true;
split v34_5 tmp_to_use_42 v30_5 72;
add v35_5 v31_5 v34_5;
split tmp1_20 tmp2_20 v32_5 88;
shl v36_5 tmp2_20 40;
mov value_lo_45 72056494526300160@uint64;
mov value_hi_45 0@uint64;
join value_45 value_hi_45 value_lo_45;
and v37_5@uint128 v36_5 value_45;
assume v37_5 + (v34_5 * 1099511627776 * 65536) = v32_5 * 1099511627776 && true;
add v38_5 v27_5 v37_5;
sub v39_5 v28_5 v32_5;
split v40_5 tmp_to_use_43 v39_5 56;
add v41_5 v38_5 v40_5;
cast v42_5@uint64 v39_5;
and v43_5@uint64 v42_5 72057594037927935@uint64;
vpc tmp_to_use_p_13@uint64 tmp_to_use_43;
assume v43_5 = tmp_to_use_43 && true;
mov out55_0_5 v43_5;
split v44_5 tmp_to_use_44 v41_5 56;
add v45_5 v35_5 v44_5;
cast v46_5@uint64 v41_5;
and v47_5@uint64 v46_5 72057594037927935@uint64;
vpc tmp_to_use_p_14@uint64 tmp_to_use_44;
assume v47_5 = tmp_to_use_44 && true;
mov out55_8_5 v47_5;
split v48_5 tmp_to_use_45 v45_5 56;
add v49_5 v33_5 v48_5;
cast v50_5@uint64 v45_5;
and v51_5@uint64 v50_5 72057594037927935@uint64;
vpc tmp_to_use_p_15@uint64 tmp_to_use_45;
assume v51_5 = tmp_to_use_45 && true;
mov out55_16_5 v51_5;
vpc v52_5@uint64 v49_5;
mov out55_24_5 v52_5;
mov x_out14_0_1 out55_0_5;
mov x_out14_8_1 out55_8_5;
mov x_out14_16_1 out55_16_5;
mov x_out14_24_1 out55_24_5;
mov v98_1 delta_0_1;
mov v99_1 gamma_0_1;
add v100_1 v98_1 v99_1;
mov delta_0_2 v100_1;
mov v101_1 delta_8_1;
mov v102_1 gamma_8_1;
add v103_1 v101_1 v102_1;
mov delta_8_2 v103_1;
mov v104_1 delta_16_1;
mov v105_1 gamma_16_1;
add v106_1 v104_1 v105_1;
mov delta_16_2 v106_1;
mov v107_1 delta_24_1;
mov v108_1 gamma_24_1;
add v109_1 v107_1 v108_1;
mov delta_24_2 v109_1;
mov v94_1 y_in6_0_1;
mov v95_1 y_in6_8_1;
mov v96_1 y_in6_16_1;
mov v97_1 y_in6_24_1;
mov v86_1 z_in3_0_1;
add v87_1 v86_1 v94_1;
mov v88_1 z_in3_8_1;
add v89_1 v88_1 v95_1;
mov v90_1 z_in3_16_1;
add v91_1 v90_1 v96_1;
mov v92_1 z_in3_24_1;
add v93_1 v92_1 v97_1;
mul tmp0310_1 v87_1 2@uint64;
mul tmp1312_1 v89_1 2@uint64;
mul tmp2314_1 v91_1 2@uint64;
mulj v316_1 v87_1 v87_1;
mulj v318_1 v87_1 tmp1312_1;
mulj v320_1 v87_1 tmp2314_1;
mulj v322_1 v89_1 v89_1;
mulj v327_1 v93_1 tmp0310_1;
mulj v328_1 tmp2314_1 v89_1;
mulj v330_1 tmp1312_1 v93_1;
mulj v332_1 v91_1 v91_1;
add v333_1 v330_1 v332_1;
mov tmp_64_6 v333_1;
mulj v334_1 tmp2314_1 v93_1;
mov tmp_80_6 v334_1;
mulj v335_1 v93_1 v93_1;
mov tmp_96_6 v335_1;
vpc v75_1@uint128 v100_1;
sub v549_1 18446744073709551872@uint128 v75_1;
add v76_1 v316_1 v549_1;
mov tmp_0_6 v76_1;
vpc v78_1@uint128 v103_1;
sub v548_1 18446462598732840704@uint128 v78_1;
add v79_1 v318_1 v548_1;
mov tmp_16_6 v79_1;
vpc v81_1@uint128 v106_1;
sub v196_1 18446744073709551360@uint128 v81_1;
add v197_1 v196_1 v322_1;
add v82_1 v197_1 v320_1;
mov tmp_32_6 v82_1;
vpc v84_1@uint128 v109_1;
sub v194_1 18446744073709551360@uint128 v84_1;
add v195_1 v194_1 v327_1;
add v85_1 v195_1 v328_1;
mov tmp_48_6 v85_1;
mov in54_0_6 tmp_0_6;
mov in54_16_6 tmp_16_6;
mov in54_32_6 tmp_32_6;
mov in54_48_6 tmp_48_6;
mov in54_64_6 tmp_64_6;
mov in54_80_6 tmp_80_6;
mov in54_96_6 tmp_96_6;
mov v1_6 in54_0_6;
mov value_lo_46 32768@uint64;
mov value_hi_46 9223372036854775808@uint64;
join value_46 value_hi_46 value_lo_46;
add v2_6 v1_6 value_46;
mov v3_6 in54_16_6;
mov value_lo_47 18410715276690587648@uint64;
mov value_hi_47 9223372036854775679@uint64;
join value_47 value_hi_47 value_lo_47;
add v4_6 v3_6 value_47;
mov v5_6 in54_32_6;
mov value_lo_48 0@uint64;
mov value_hi_48 9223372036854775680@uint64;
join value_48 value_hi_48 value_lo_48;
add v6_6 v5_6 value_48;
mov v7_6 in54_48_6;
mov v8_6 in54_64_6;
mov v9_6 in54_96_6;
split v10_6 tmp_to_use_46 v9_6 16;
add v11_6 v8_6 v10_6;
split tmp1_21 tmp2_21 v9_6 88;
shl v12_6 tmp2_21 40;
mov value_lo_49 72056494526300160@uint64;
mov value_hi_49 0@uint64;
join value_49 value_hi_49 value_lo_49;
and v13_6@uint128 v12_6 value_49;
assume v13_6 = tmp_to_use_46 * 1099511627776 && true;
sub v15_6 v6_6 v9_6;
mov v16_6 in54_80_6;
split v17_6 tmp_to_use_47 v16_6 16;
add v64_6 v7_6 v17_6;
add v18_6 v13_6 v64_6;
split tmp1_22 tmp2_22 v16_6 88;
shl v19_6 tmp2_22 40;
mov value_lo_50 72056494526300160@uint64;
mov value_hi_50 0@uint64;
join value_50 value_hi_50 value_lo_50;
and v20_6@uint128 v19_6 value_50;
assume v20_6 = tmp_to_use_47 * 1099511627776 && true;
add v21_6 v15_6 v20_6;
sub v22_6 v4_6 v16_6;
split v23_6 tmp_to_use_48 v11_6 16;
add v24_6 v21_6 v23_6;
split tmp1_23 tmp2_23 v11_6 88;
shl v25_6 tmp2_23 40;
mov value_lo_51 72056494526300160@uint64;
mov value_hi_51 0@uint64;
join value_51 value_hi_51 value_lo_51;
and v26_6@uint128 v25_6 value_51;
assume v26_6 = tmp_to_use_48 * 1099511627776 && true;
add v27_6 v22_6 v26_6;
sub v28_6 v2_6 v11_6;
split v29_6 tmp_to_use_49 v24_6 56;
add v30_6 v18_6 v29_6;
mov value_lo_52 72057594037927935@uint64;
mov value_hi_52 0@uint64;
join value_52 value_hi_52 value_lo_52;
and v31_6@uint128 v24_6 value_52;
assume v31_6 = tmp_to_use_49 && true;
split v32_6 tmp_to_use_50 v30_6 56;
mov value_lo_53 72057594037927935@uint64;
mov value_hi_53 0@uint64;
join value_53 value_hi_53 value_lo_53;
and v33_6@uint128 v30_6 value_53;
assume v33_6 = tmp_to_use_50 && true;
split v34_6 tmp_to_use_51 v30_6 72;
add v35_6 v31_6 v34_6;
split tmp1_24 tmp2_24 v32_6 88;
shl v36_6 tmp2_24 40;
mov value_lo_54 72056494526300160@uint64;
mov value_hi_54 0@uint64;
join value_54 value_hi_54 value_lo_54;
and v37_6@uint128 v36_6 value_54;
assume v37_6 + (v34_6 * 1099511627776 * 65536) = v32_6 * 1099511627776 && true;
add v38_6 v27_6 v37_6;
sub v39_6 v28_6 v32_6;
split v40_6 tmp_to_use_52 v39_6 56;
add v41_6 v38_6 v40_6;
cast v42_6@uint64 v39_6;
and v43_6@uint64 v42_6 72057594037927935@uint64;
vpc tmp_to_use_p_16@uint64 tmp_to_use_52;
assume v43_6 = tmp_to_use_52 && true;
mov out55_0_6 v43_6;
split v44_6 tmp_to_use_53 v41_6 56;
add v45_6 v35_6 v44_6;
cast v46_6@uint64 v41_6;
and v47_6@uint64 v46_6 72057594037927935@uint64;
vpc tmp_to_use_p_17@uint64 tmp_to_use_53;
assume v47_6 = tmp_to_use_53 && true;
mov out55_8_6 v47_6;
split v48_6 tmp_to_use_54 v45_6 56;
add v49_6 v33_6 v48_6;
cast v50_6@uint64 v45_6;
and v51_6@uint64 v50_6 72057594037927935@uint64;
vpc tmp_to_use_p_18@uint64 tmp_to_use_54;
assume v51_6 = tmp_to_use_54 && true;
mov out55_16_6 v51_6;
vpc v52_6@uint64 v49_6;
mov out55_24_6 v52_6;
mov z_out17_0_1 out55_0_6;
mov z_out17_8_1 out55_8_6;
mov z_out17_16_1 out55_16_6;
mov z_out17_24_1 out55_24_6;
mov v58_1 beta_0_1;
mul v59_1 v58_1 4@uint64;
mov v60_1 beta_8_1;
mul v61_1 v60_1 4@uint64;
mov v62_1 beta_16_1;
mul v63_1 v62_1 4@uint64;
mov v64_7 beta_24_1;
mul v65_1 v64_7 4@uint64;
add v46_7 v59_1 288230376151711748@uint64;
add v47_7 v61_1 288225978105200636@uint64;
add v48_7 v63_1 288230376151711740@uint64;
add v49_7 v65_1 288230376151711740@uint64;
mov v50_7 x_out14_0_1;
sub v51_7 v46_7 v50_7;
mov beta_0_2 v51_7;
mov v52_7 x_out14_8_1;
sub v53_1 v47_7 v52_7;
mov beta_8_2 v53_1;
mov v54_1 x_out14_16_1;
sub v55_1 v48_7 v54_1;
mov beta_16_2 v55_1;
mov v56_1 x_out14_24_1;
sub v57_1 v49_7 v56_1;
mov beta_24_2 v57_1;
mov v268_1 alpha_0_1;
mulj v272_1 v268_1 v51_7;
mulj v275_1 v268_1 v53_1;
mov v276_1 alpha_8_1;
mulj v278_1 v51_7 v276_1;
mulj v282_1 v268_1 v55_1;
mulj v283_1 v53_1 v276_1;
mov v285_1 alpha_16_1;
mulj v287_1 v51_7 v285_1;
mulj v291_1 v268_1 v57_1;
mulj v292_1 v276_1 v55_1;
mov v294_1 alpha_24_1;
mulj v296_1 v51_7 v294_1;
mulj v297_1 v53_1 v285_1;
mulj v300_1 v276_1 v57_1;
mulj v301_1 v55_1 v285_1;
mulj v303_1 v53_1 v294_1;
mulj v305_1 v285_1 v57_1;
mulj v306_1 v55_1 v294_1;
mulj v308_1 v57_1 v294_1;
mov v241_1 gamma_0_1;
mul tmp0242_1 v241_1 2@uint64;
mov v243_1 gamma_8_1;
mul tmp1244_1 v243_1 2@uint64;
mov v245_1 gamma_16_1;
mul tmp2246_1 v245_1 2@uint64;
mulj v248_1 v241_1 v241_1;
mulj v252_1 v241_1 tmp2246_1;
mulj v254_1 v243_1 v243_1;
add v255_1 v252_1 v254_1;
mov v256_1 gamma_24_1;
mulj v259_1 v256_1 tmp0242_1;
mulj v260_1 tmp2246_1 v243_1;
add v261_1 v259_1 v260_1;
mulj v262_1 tmp1244_1 v256_1;
mulj v264_1 v245_1 v245_1;
add v265_1 v262_1 v264_1;
mulj v267_1 v256_1 v256_1;
mul v33_7 v248_1 8@uint128;
mulj v185_1 v241_1 tmp1244_1;
mul v35_7 v185_1 8@uint128;
mul v37_7 v255_1 8@uint128;
mul v39_7 v261_1 8@uint128;
mul v41_7 v265_1 8@uint128;
mulj v184_1 tmp2246_1 v256_1;
mul v43_7 v184_1 8@uint128;
mul v45_7 v267_1 8@uint128;
sub v183_1 1329227995784915872903807060280344576@uint128 v33_7;
add v228_1 v183_1 v272_1;
mov tmp_0_7 v228_1;
sub v181_1 1329227995784915854457062986570792960@uint128 v35_7;
add v182_1 v181_1 v275_1;
add v230_1 v182_1 v278_1;
mov tmp_16_7 v230_1;
sub v178_1 1329227995784915854457062986570792960@uint128 v37_7;
add v179_1 v178_1 v282_1;
add v180_1 v179_1 v283_1;
add v232_1 v180_1 v287_1;
mov tmp_32_7 v232_1;
sub v174_1 1329227995784915872903807060280344576@uint128 v39_7;
add v175_1 v174_1 v291_1;
add v176_1 v175_1 v292_1;
add v177_1 v176_1 v296_1;
add v234_1 v177_1 v297_1;
mov tmp_48_7 v234_1;
sub v170_1 1329207713375312202786639039319506944@uint128 v41_7;
add v171_1 v170_1 v300_1;
add v172_1 v171_1 v301_1;
add v236_1 v172_1 v303_1;
mov tmp_64_7 v236_1;
sub v168_1 1329227995784915854457062986570792960@uint128 v43_7;
add v169_1 v168_1 v305_1;
add v238_1 v169_1 v306_1;
mov tmp_80_7 v238_1;
sub v167_1 1329227995784915854457062986570792960@uint128 v45_7;
add v240_1 v167_1 v308_1;
mov tmp_96_7 v240_1;
mov in54_0_7 tmp_0_7;
mov in54_16_7 tmp_16_7;
mov in54_32_7 tmp_32_7;
mov in54_48_7 tmp_48_7;
mov in54_64_7 tmp_64_7;
mov in54_80_7 tmp_80_7;
mov in54_96_7 tmp_96_7;
mov v1_7 in54_0_7;
mov value_lo_55 32768@uint64;
mov value_hi_55 9223372036854775808@uint64;
join value_55 value_hi_55 value_lo_55;
add v2_7 v1_7 value_55;
mov v3_7 in54_16_7;
mov value_lo_56 18410715276690587648@uint64;
mov value_hi_56 9223372036854775679@uint64;
join value_56 value_hi_56 value_lo_56;
add v4_7 v3_7 value_56;
mov v5_7 in54_32_7;
mov value_lo_57 0@uint64;
mov value_hi_57 9223372036854775680@uint64;
join value_57 value_hi_57 value_lo_57;
add v6_7 v5_7 value_57;
mov v7_7 in54_48_7;
mov v8_7 in54_64_7;
mov v9_7 in54_96_7;
split v10_7 tmp_to_use_55 v9_7 16;
add v11_7 v8_7 v10_7;
split tmp1_25 tmp2_25 v9_7 88;
shl v12_7 tmp2_25 40;
mov value_lo_58 72056494526300160@uint64;
mov value_hi_58 0@uint64;
join value_58 value_hi_58 value_lo_58;
and v13_7@uint128 v12_7 value_58;
assume v13_7 = tmp_to_use_55 * 1099511627776 && true;
sub v15_7 v6_7 v9_7;
mov v16_7 in54_80_7;
split v17_7 tmp_to_use_56 v16_7 16;
add v64_8 v7_7 v17_7;
add v18_7 v13_7 v64_8;
split tmp1_26 tmp2_26 v16_7 88;
shl v19_7 tmp2_26 40;
mov value_lo_59 72056494526300160@uint64;
mov value_hi_59 0@uint64;
join value_59 value_hi_59 value_lo_59;
and v20_7@uint128 v19_7 value_59;
assume v20_7 = tmp_to_use_56 * 1099511627776 && true;
add v21_7 v15_7 v20_7;
sub v22_7 v4_7 v16_7;
split v23_7 tmp_to_use_57 v11_7 16;
add v24_7 v21_7 v23_7;
split tmp1_27 tmp2_27 v11_7 88;
shl v25_7 tmp2_27 40;
mov value_lo_60 72056494526300160@uint64;
mov value_hi_60 0@uint64;
join value_60 value_hi_60 value_lo_60;
and v26_7@uint128 v25_7 value_60;
assume v26_7 = tmp_to_use_57 * 1099511627776 && true;
add v27_7 v22_7 v26_7;
sub v28_7 v2_7 v11_7;
split v29_7 tmp_to_use_58 v24_7 56;
add v30_7 v18_7 v29_7;
mov value_lo_61 72057594037927935@uint64;
mov value_hi_61 0@uint64;
join value_61 value_hi_61 value_lo_61;
and v31_7@uint128 v24_7 value_61;
assume v31_7 = tmp_to_use_58 && true;
split v32_7 tmp_to_use_59 v30_7 56;
mov value_lo_62 72057594037927935@uint64;
mov value_hi_62 0@uint64;
join value_62 value_hi_62 value_lo_62;
and v33_8@uint128 v30_7 value_62;
assume v33_8 = tmp_to_use_59 && true;
split v34_7 tmp_to_use_60 v30_7 72;
add v35_8 v31_7 v34_7;
split tmp1_28 tmp2_28 v32_7 88;
shl v36_7 tmp2_28 40;
mov value_lo_63 72056494526300160@uint64;
mov value_hi_63 0@uint64;
join value_63 value_hi_63 value_lo_63;
and v37_8@uint128 v36_7 value_63;
assume v37_8 + (v34_7 * 1099511627776 * 65536) = v32_7 * 1099511627776 && true;
add v38_7 v27_7 v37_8;
sub v39_8 v28_7 v32_7;
split v40_7 tmp_to_use_61 v39_8 56;
add v41_8 v38_7 v40_7;
cast v42_7@uint64 v39_8;
and v43_8@uint64 v42_7 72057594037927935@uint64;
vpc tmp_to_use_p_19@uint64 tmp_to_use_61;
assume v43_8 = tmp_to_use_61 && true;
mov out55_0_7 v43_8;
split v44_7 tmp_to_use_62 v41_8 56;
add v45_8 v35_8 v44_7;
cast v46_8@uint64 v41_8;
and v47_8@uint64 v46_8 72057594037927935@uint64;
vpc tmp_to_use_p_20@uint64 tmp_to_use_62;
assume v47_8 = tmp_to_use_62 && true;
mov out55_8_7 v47_8;
split v48_8 tmp_to_use_63 v45_8 56;
add v49_8 v33_8 v48_8;
cast v50_8@uint64 v45_8;
and v51_8@uint64 v50_8 72057594037927935@uint64;
vpc tmp_to_use_p_21@uint64 tmp_to_use_63;
assume v51_8 = tmp_to_use_63 && true;
mov out55_16_7 v51_8;
vpc v52_8@uint64 v49_8;
mov out55_24_7 v52_8;
mov y_out22_0_1 out55_0_7;
mov y_out22_8_1 out55_8_7;
mov y_out22_16_1 out55_16_7;
mov y_out22_24_1 out55_24_7;
mov xp0_1 x_out14_0_1;
mov xp1_1 x_out14_8_1;
mov xp2_1 x_out14_16_1;
mov xp3_1 x_out14_24_1;
mov yp0_1 y_out22_0_1;
mov yp1_1 y_out22_8_1;
mov yp2_1 y_out22_16_1;
mov yp3_1 y_out22_24_1;
mov zp0_1 z_out17_0_1;
mov zp1_1 z_out17_8_1;
mov zp2_1 z_out17_16_1;
mov zp3_1 z_out17_24_1;
{ and [xp0_1 + (xp1_1 * 72057594037927936) + (xp2_1 * 5192296858534827628530496329220096) + (xp3_1 * 374144419156711147060143317175368453031918731001856) = (3 * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856) - ((z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)) * (z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)))) * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856) + ((z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)) * (z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)))) * 3 * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856) - ((z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)) * (z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)))) * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856) + ((z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)) * (z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856))))) - (8 * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856)) * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856)) * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856))) (mod 26959946667150639794667015087019630673637144422540572481103610249216 - 79228162514264337593543950336 + 1), yp0_1 + (yp1_1 * 72057594037927936) + (yp2_1 * 5192296858534827628530496329220096) + (yp3_1 * 374144419156711147060143317175368453031918731001856) = (3 * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856) - ((z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)) * (z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)))) * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856) + ((z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)) * (z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)))) * ((4 * (x0_0 + (x1_0 * 72057594037927936) + (x2_0 * 5192296858534827628530496329220096) + (x3_0 * 374144419156711147060143317175368453031918731001856)) * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856)) * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856))) - (xp0_1 + (xp1_1 * 72057594037927936) + (xp2_1 * 5192296858534827628530496329220096) + (xp3_1 * 374144419156711147060143317175368453031918731001856)))) - (8 * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856)) * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856)) * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856)) * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856))) (mod 26959946667150639794667015087019630673637144422540572481103610249216 - 79228162514264337593543950336 + 1), zp0_1 + (zp1_1 * 72057594037927936) + (zp2_1 * 5192296858534827628530496329220096) + (zp3_1 * 374144419156711147060143317175368453031918731001856) = 2 * (y0_0 + (y1_0 * 72057594037927936) + (y2_0 * 5192296858534827628530496329220096) + (y3_0 * 374144419156711147060143317175368453031918731001856)) * (z0_0 + (z1_0 * 72057594037927936) + (z2_0 * 5192296858534827628530496329220096) + (z3_0 * 374144419156711147060143317175368453031918731001856)) (mod 26959946667150639794667015087019630673637144422540572481103610249216 - 79228162514264337593543950336 + 1)] && and [v13_1 = mul (tmp_to_use_1) (1099511627776@128), v20_1 = mul (tmp_to_use_2) (1099511627776@128), v26_1 = mul (tmp_to_use_3) (1099511627776@128), v31_1 = tmp_to_use_4, v33_1 = tmp_to_use_5, add (v37_1) (mul (mul (v34_1) (1099511627776@128)) (65536@128)) = mul (v32_1) (1099511627776@128), v43_1 = tmp_to_use_p_1, v47_1 = tmp_to_use_p_2, v51_1 = tmp_to_use_p_3, v13_2 = mul (tmp_to_use_10) (1099511627776@128), v20_2 = mul (tmp_to_use_11) (1099511627776@128), v26_2 = mul (tmp_to_use_12) (1099511627776@128), v31_2 = tmp_to_use_13, v33_2 = tmp_to_use_14, add (v37_2) (mul (mul (v34_2) (1099511627776@128)) (65536@128)) = mul (v32_2) (1099511627776@128), v43_2 = tmp_to_use_p_4, v47_2 = tmp_to_use_p_5, v51_2 = tmp_to_use_p_6, v13_3 = mul (tmp_to_use_19) (1099511627776@128), v20_3 = mul (tmp_to_use_20) (1099511627776@128), v26_3 = mul (tmp_to_use_21) (1099511627776@128), v31_3 = tmp_to_use_22, v33_3 = tmp_to_use_23, add (v37_3) (mul (mul (v34_3) (1099511627776@128)) (65536@128)) = mul (v32_3) (1099511627776@128), v43_3 = tmp_to_use_p_7, v47_3 = tmp_to_use_p_8, v51_3 = tmp_to_use_p_9, v13_4 = mul (tmp_to_use_28) (1099511627776@128), v20_4 = mul (tmp_to_use_29) (1099511627776@128), v26_4 = mul (tmp_to_use_30) (1099511627776@128), v31_4 = tmp_to_use_31, v33_4 = tmp_to_use_32, add (v37_4) (mul (mul (v34_4) (1099511627776@128)) (65536@128)) = mul (v32_4) (1099511627776@128), v43_4 = tmp_to_use_p_10, v47_4 = tmp_to_use_p_11, v51_4 = tmp_to_use_p_12, carry_1_1 = carry_2_1, v13_5 = mul (tmp_to_use_37) (1099511627776@128), v20_5 = mul (tmp_to_use_38) (1099511627776@128), v26_5 = mul (tmp_to_use_39) (1099511627776@128), v31_5 = tmp_to_use_40, v33_5 = tmp_to_use_41, add (v37_5) (mul (mul (v34_5) (1099511627776@128)) (65536@128)) = mul (v32_5) (1099511627776@128), v43_5 = tmp_to_use_p_13, v47_5 = tmp_to_use_p_14, v51_5 = tmp_to_use_p_15, v13_6 = mul (tmp_to_use_46) (1099511627776@128), v20_6 = mul (tmp_to_use_47) (1099511627776@128), v26_6 = mul (tmp_to_use_48) (1099511627776@128), v31_6 = tmp_to_use_49, v33_6 = tmp_to_use_50, add (v37_6) (mul (mul (v34_6) (1099511627776@128)) (65536@128)) = mul (v32_6) (1099511627776@128), v43_6 = tmp_to_use_p_16, v47_6 = tmp_to_use_p_17, v51_6 = tmp_to_use_p_18, v13_7 = mul (tmp_to_use_55) (1099511627776@128), v20_7 = mul (tmp_to_use_56) (1099511627776@128), v26_7 = mul (tmp_to_use_57) (1099511627776@128), v31_7 = tmp_to_use_58, v33_8 = tmp_to_use_59, add (v37_8) (mul (mul (v34_7) (1099511627776@128)) (65536@128)) = mul (v32_7) (1099511627776@128), v43_8 = tmp_to_use_p_19, v47_8 = tmp_to_use_p_20, v51_8 = tmp_to_use_p_21] }
