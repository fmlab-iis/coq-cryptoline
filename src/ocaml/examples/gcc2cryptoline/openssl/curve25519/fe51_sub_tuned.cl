proc main(uint64 a0_0, uint64 a1_0, uint64 a2_0, uint64 a3_0, uint64 a4_0, uint64 b0_0, uint64 b1_0, uint64 b2_0, uint64 b3_0, uint64 b4_0) =
{ true && and [a0_0 <u 2251799813718016@64, a1_0 <u 2251799813718016@64, a2_0 <u 2251799813718016@64, a3_0 <u 2251799813718016@64, a4_0 <u 2251799813718016@64, b0_0 <u 2251799813718016@64, b1_0 <u 2251799813718016@64, b2_0 <u 2251799813718016@64, b3_0 <u 2251799813718016@64, b4_0 <u 2251799813718016@64] }
mov f22_0_1 a0_0;
mov f22_8_1 a1_0;
mov f22_16_1 a2_0;
mov f22_24_1 a3_0;
mov f22_32_1 a4_0;
mov g23_0_1 b0_0;
mov g23_8_1 b1_0;
mov g23_16_1 b2_0;
mov g23_24_1 b3_0;
mov g23_32_1 b4_0;
mov v1_1 f22_0_1;
mov v2_1 g23_0_1;
subb carry_1 v3_1 v1_1 v2_1;
adds carry1_1 v4_1 v3_1 4503599627370458@uint64;
assume carry_1 = carry1_1 && true;
mov h24_0_1 v4_1;
mov v5_1 f22_8_1;
mov v6_1 g23_8_1;
subb carry_2 v7_1 v5_1 v6_1;
adds carry1_2 v8_1 v7_1 4503599627370494@uint64;
assume carry_2 = carry1_2 && true;
mov h24_8_1 v8_1;
mov v9_1 f22_16_1;
mov v10_1 g23_16_1;
subb carry_3 v11_1 v9_1 v10_1;
adds carry1_3 v12_1 v11_1 4503599627370494@uint64;
assume carry_3 = carry1_3 && true;
mov h24_16_1 v12_1;
mov v13_1 f22_24_1;
mov v14_1 g23_24_1;
subb carry_4 v15_1 v13_1 v14_1;
adds carry1_4 v16_1 v15_1 4503599627370494@uint64;
assume carry_4 = carry1_4 && true;
mov h24_24_1 v16_1;
mov v17_1 f22_32_1;
mov v18_1 g23_32_1;
subb carry_5 v19_1 v17_1 v18_1;
adds carry1_5 v20_1 v19_1 4503599627370494@uint64;
assume carry_5 = carry1_5 && true;
mov h24_32_1 v20_1;
mov c0_1 h24_0_1;
mov c1_1 h24_8_1;
mov c2_1 h24_16_1;
mov c3_1 h24_24_1;
mov c4_1 h24_32_1;
{ c0_1 + (c1_1 * 2251799813685248) + (c2_1 * 5070602400912917605986812821504) + (c3_1 * 11417981541647679048466287755595961091061972992) + (c4_1 * 25711008708143844408671393477458601640355247900524685364822016) = a0_0 + (a1_0 * 2251799813685248) + (a2_0 * 5070602400912917605986812821504) + (a3_0 * 11417981541647679048466287755595961091061972992) + (a4_0 * 25711008708143844408671393477458601640355247900524685364822016) - (b0_0 + (b1_0 * 2251799813685248) + (b2_0 * 5070602400912917605986812821504) + (b3_0 * 11417981541647679048466287755595961091061972992) + (b4_0 * 25711008708143844408671393477458601640355247900524685364822016)) (mod 57896044618658097711785492504343953926634992332820282019728792003956564819968 - 19) && and [carry_1 = carry1_1, carry_2 = carry1_2, carry_3 = carry1_3, carry_4 = carry1_4, carry_5 = carry1_5] }
