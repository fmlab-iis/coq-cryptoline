proc main(uint128 in4_0, uint128 in5_0, uint128 in6_0, uint128 in7_0, uint128 out0_0, uint128 out1_0, uint128 out2_0, uint128 out3_0) =
{ true && and [in4_0 <u 2361183241434822606848@128, in5_0 <u 2361183241434822606848@128, in6_0 <u 2361183241434822606848@128, in7_0 <u 2361183241434822606848@128, out0_0 <u 324518553658426726783156020576256@128, out1_0 <u 324518553658426726783156020576256@128, out2_0 <u 324518553658426726783156020576256@128, out3_0 <u 324518553658426726783156020576256@128, out0_0 >=u add (add (add (in6_0) (mul (4294967296@128) (in6_0))) (in7_0)) (mul (4294967296@128) (in7_0)), out1_0 >=u add (in7_0) (mul (4294967296@128) (in4_0)), out2_0 >=u add (in5_0) (mul (4294967296@128) (in5_0)), out3_0 >=u add (add (in4_0) (mul (4294967296@128) (in5_0))) (mul (4294967296@128) (in6_0))] }
mov in51_64_1 in4_0;
mov in51_80_1 in5_0;
mov in51_96_1 in6_0;
mov in51_112_1 in7_0;
mov out53_0_1 out0_0;
mov out53_16_1 out1_0;
mov out53_32_1 out2_0;
mov out53_48_1 out3_0;
mov v1_1 in51_64_1;
mov v2_1 in51_80_1;
split tmp1_1 tmp2_1 v2_1 96;
shl v3_1 tmp2_1 32;
assume tmp1_1 = 0 && true;
add v4_1 v1_1 v3_1;
mov v5_1 out53_0_1;
add v7_1 v4_1 v5_1;
mov out53_0_2 v7_1;
mov v8_1 out53_48_1;
sub v9_1 v8_1 v4_1;
mov out53_48_2 v9_1;
mov v10_1 in51_80_1;
mov v11_1 in51_112_1;
mov v13_1 out53_16_1;
add v73_1 v10_1 v13_1;
sub v14_1 v73_1 v11_1;
mov out53_16_2 v14_1;
mov v15_1 out53_32_1;
add v72_1 v11_1 v15_1;
sub v16_1 v72_1 v10_1;
mov out53_32_2 v16_1;
mov v17_1 in51_64_1;
split tmp1_2 tmp2_2 v17_1 96;
shl v18_1 tmp2_2 32;
assume tmp1_2 = 0 && true;
sub v19_1 v14_1 v18_1;
mov out53_16_3 v19_1;
mov v20_1 in51_64_1;
split tmp1_3 tmp2_3 v20_1 96;
shl v21_1 tmp2_3 32;
assume tmp1_3 = 0 && true;
add v22_1 v9_1 v21_1;
mov out53_48_3 v22_1;
mov v23_1 in51_80_1;
split tmp1_4 tmp2_4 v23_1 96;
shl v24_1 tmp2_4 32;
assume tmp1_4 = 0 && true;
sub v25_1 v16_1 v24_1;
mov out53_32_3 v25_1;
mov v26_1 in51_96_1;
sub v27_1 v7_1 v26_1;
mov out53_0_3 v27_1;
mov v28_1 in51_96_1;
split tmp1_5 tmp2_5 v28_1 96;
shl v29_1 tmp2_5 32;
assume tmp1_5 = 0 && true;
subb borrow_v30_1 v30_1 v27_1 v29_1;
mov out53_0_4 v30_1;
mov v31_1 in51_96_1;
split tmp1_6 tmp2_6 v31_1 95;
shl v32_1 tmp2_6 33;
assume tmp1_6 = 0 && true;
add v33_1 v19_1 v32_1;
mov out53_16_4 v33_1;
mov v34_1 in51_96_1;
mul v35_1 v34_1 2@uint128;
add v36_1 v25_1 v35_1;
mov out53_32_4 v36_1;
mov v37_1 in51_96_1;
split tmp1_7 tmp2_7 v37_1 96;
shl v38_1 tmp2_7 32;
assume tmp1_7 = 0 && true;
sub v39_1 v22_1 v38_1;
mov out53_48_4 v39_1;
mov v40_1 in51_112_1;
sub v41_1 v30_1 v40_1;
mov out53_0_5 v41_1;
mov v42_1 in51_112_1;
split tmp1_8 tmp2_8 v42_1 96;
shl v43_1 tmp2_8 32;
assume tmp1_8 = 0 && true;
sub v44_1 v41_1 v43_1;
mov out53_0_6 v44_1;
mov v45_1 in51_112_1;
split tmp1_9 tmp2_9 v45_1 95;
shl v46_1 tmp2_9 33;
assume tmp1_9 = 0 && true;
add v47_1 v36_1 v46_1;
mov out53_32_5 v47_1;
mov v48_1 in51_112_1;
mul v49_1 v48_1 3@uint128;
add v50_1 v39_1 v49_1;
mov out53_48_5 v50_1;
mov c0_1 out53_0_6;
mov c1_1 out53_16_4;
mov c2_1 out53_32_5;
mov c3_1 out53_48_5;
{ true && and [tmp1_1 = 0@128, tmp1_2 = 0@128, tmp1_3 = 0@128, tmp1_4 = 0@128, tmp1_5 = 0@128, tmp1_6 = 0@128, tmp1_7 = 0@128, tmp1_8 = 0@128, tmp1_9 = 0@128, c0_1 <=u add (add (out0_0) (in4_0)) (mul (4294967296@128) (in5_0)), c1_1 <=u add (add (out1_0) (in5_0)) (mul (8589934592@128) (in6_0)), c2_1 <=u add (add (add (out2_0) (in7_0)) (mul (2@128) (in6_0))) (mul (8589934592@128) (in7_0)), c3_1 <=u add (add (out3_0) (mul (4294967296@128) (in4_0))) (mul (3@128) (in7_0))] }
