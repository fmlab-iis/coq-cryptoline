proc main(uint64 a0_0, uint64 a1_0, uint64 a2_0, uint64 a3_0, uint64 a4_0) =
{ true && and [a0_0 <u 9007199254740992@64, a1_0 <u 9007199254740992@64, a2_0 <u 9007199254740992@64, a3_0 <u 9007199254740992@64, a4_0 <u 9007199254740992@64] }
mul d061_1 a0_0 2@uint64;
mul d162_1 a1_0 2@uint64;
mul d263_1 a2_0 38@uint64;
mul d41964_1 a4_0 19@uint64;
mul d465_1 a4_0 38@uint64;
mulj v67_1 a0_0 a0_0;
mulj v70_1 d465_1 a1_0;
mulj v74_1 d263_1 a3_0;
add v104_1 v70_1 v74_1;
add s075_1 v67_1 v104_1;
mulj v77_1 a1_0 d061_1;
mulj v79_1 d465_1 a2_0;
add v80_1 v77_1 v79_1;
mul v81_1 a3_0 19@uint64;
mulj v83_1 a3_0 v81_1;
add s184_1 v80_1 v83_1;
mulj v85_1 d061_1 a2_0;
mulj v86_1 a1_0 a1_0;
mulj v88_1 d465_1 a3_0;
add v103_1 v85_1 v88_1;
add s289_1 v86_1 v103_1;
mulj v90_1 a3_0 d061_1;
mulj v92_1 a2_0 d162_1;
add v93_1 v90_1 v92_1;
mulj v96_1 a4_0 d41964_1;
add s397_1 v93_1 v96_1;
mulj v98_1 d061_1 a4_0;
mulj v99_1 a3_0 d162_1;
add v100_1 v98_1 v99_1;
mulj v101_1 a2_0 a2_0;
add s4102_1 v100_1 v101_1;
cast v33_1@uint64 s075_1;
and r034_1@uint64 v33_1 2251799813685247@uint64;
split c35_1 tmp_to_use_1 s075_1 51;
vpc tmp_to_use_p_1@uint64 tmp_to_use_1;
assume tmp_to_use_p_1 = r034_1 && true;
vpc v36_1@uint128 r034_1;
add v37_1 c35_1 s184_1;
cast v39_1@uint64 v37_1;
and r040_1@uint64 v39_1 2251799813685247@uint64;
split c41_1 tmp_to_use_2 v37_1 51;
vpc tmp_to_use_p_2@uint64 tmp_to_use_2;
assume tmp_to_use_p_2 = r040_1 && true;
vpc v42_1@uint128 r040_1;
add v43_1 c41_1 s289_1;
cast v45_1@uint64 v43_1;
and r046_1@uint64 v45_1 2251799813685247@uint64;
split c47_1 tmp_to_use_3 v43_1 51;
vpc tmp_to_use_p_3@uint64 tmp_to_use_3;
assume tmp_to_use_p_3 = r046_1 && true;
vpc v48_1@uint128 r046_1;
add v49_1 c47_1 s397_1;
cast v51_1@uint64 v49_1;
and r052_1@uint64 v51_1 2251799813685247@uint64;
split c53_1 tmp_to_use_4 v49_1 51;
vpc tmp_to_use_p_4@uint64 tmp_to_use_4;
assume tmp_to_use_p_4 = r052_1 && true;
vpc v54_1@uint128 r052_1;
add v55_1 c53_1 s4102_1;
and b4_11_1@uint128 v55_1 2251799813685247@uint128;
split v1_1 tmp_to_use_5 v55_1 51;
assume tmp_to_use_5 = b4_11_1 && true;
and v15_1@uint128 v1_1 18446744073709551615@uint128;
assume v15_1 = v1_1 && true;
mul v2_1 v15_1 19@uint128;
add b0_12_1 v2_1 v36_1;
vpc v20_1@uint64 b0_12_1;
vpc v27_1@uint64 b4_11_1;
and i0_16_1@uint64 v20_1 2251799813685247@uint64;
split v3_1 tmp_to_use_6 v20_1 51;
vpc tmp_to_use_p_5@uint64 tmp_to_use_6;
assume tmp_to_use_p_5 = i0_16_1 && true;
add i1_17_1 v3_1 r040_1;
{ i0_16_1 + (i1_17_1 * 2251799813685248) + (r046_1 * 5070602400912917605986812821504) + (r052_1 * 11417981541647679048466287755595961091061972992) + (v27_1 * 25711008708143844408671393477458601640355247900524685364822016) = (a0_0 + (a1_0 * 2251799813685248) + (a2_0 * 5070602400912917605986812821504) + (a3_0 * 11417981541647679048466287755595961091061972992) + (a4_0 * 25711008708143844408671393477458601640355247900524685364822016)) * (a0_0 + (a1_0 * 2251799813685248) + (a2_0 * 5070602400912917605986812821504) + (a3_0 * 11417981541647679048466287755595961091061972992) + (a4_0 * 25711008708143844408671393477458601640355247900524685364822016)) (mod 57896044618658097711785492504343953926634992332820282019728792003956564819968 - 19) && and [tmp_to_use_p_1 = r034_1, tmp_to_use_p_2 = r040_1, tmp_to_use_p_3 = r046_1, tmp_to_use_p_4 = r052_1, tmp_to_use_5 = b4_11_1, v15_1 = v1_1, tmp_to_use_p_5 = i0_16_1, i0_16_1 <u 2251799813718016@64, i1_17_1 <u 2251799813718016@64, r046_1 <u 2251799813718016@64, r052_1 <u 2251799813718016@64, v27_1 <u 2251799813718016@64] }