proc main(uint64 a0_0, uint64 a1_0, uint64 a2_0, uint64 a3_0, uint64 a4_0) =
{ true && and [a0_0 <u 9007199254740992@64, a1_0 <u 9007199254740992@64, a2_0 <u 9007199254740992@64, a3_0 <u 9007199254740992@64, a4_0 <u 9007199254740992@64] }
mulj v3_1 a0_0 a0_0;
mulj v6_1 a0_0 a1_0;
join value_1 0@uint64 2@uint64;
mul v7_1 v6_1 value_1;
mulj v10_1 a0_0 a2_0;
join value_2 0@uint64 2@uint64;
mul v11_1 v10_1 value_2;
mulj v12_1 a1_0 a1_0;
mulj v16_1 a0_0 a3_0;
mulj v17_1 a1_0 a2_0;
add v18_1 v16_1 v17_1;
join value_3 0@uint64 2@uint64;
mul v19_1 v18_1 value_3;
mulj v22_1 a0_0 a4_0;
mulj v23_1 a1_0 a3_0;
add v24_1 v22_1 v23_1;
join value_4 0@uint64 2@uint64;
mul v25_1 v24_1 value_4;
mulj v26_1 a2_0 a2_0;
add v27_1 v25_1 v26_1;
mulj v28_1 a1_0 a4_0;
mulj v29_1 a2_0 a3_0;
add v30_1 v28_1 v29_1;
mulj v31_1 a2_0 a4_0;
join value_5 0@uint64 2@uint64;
mul v32_1 v31_1 value_5;
mulj v33_1 a3_0 a3_0;
add v34_1 v32_1 v33_1;
mulj v35_1 a3_0 a4_0;
mulj v36_1 a4_0 a4_0;
join value_6 0@uint64 38@uint64;
mul v37_1 v30_1 value_6;
add v38_1 v3_1 v37_1;
join value_7 0@uint64 19@uint64;
mul v39_1 v34_1 value_7;
add v40_1 v7_1 v39_1;
join value_8 0@uint64 38@uint64;
mul v41_1 v35_1 value_8;
add v78_1 v11_1 v41_1;
add v42_1 v12_1 v78_1;
join value_9 0@uint64 19@uint64;
mul v43_1 v36_1 value_9;
add v44_1 v19_1 v43_1;
split v45_1 tmp_to_use_1 v38_1 51;
add v46_1 v40_1 v45_1;
join value_10 0@uint64 2251799813685247@uint64;
and v47_1@uint128 v38_1 value_10;
assume v47_1 = tmp_to_use_1 && true;
split v48_1 tmp_to_use_2 v46_1 51;
add v49_1 v42_1 v48_1;
join value_11 0@uint64 2251799813685247@uint64;
and v50_1@uint128 v46_1 value_11;
assume v50_1 = tmp_to_use_2 && true;
split v51_1 tmp_to_use_3 v49_1 51;
add v52_1 v44_1 v51_1;
join value_12 0@uint64 2251799813685247@uint64;
and v53_1@uint128 v49_1 value_12;
assume v53_1 = tmp_to_use_3 && true;
split v54_1 tmp_to_use_4 v52_1 51;
add v55_1 v27_1 v54_1;
join value_13 0@uint64 2251799813685247@uint64;
and v56_1@uint128 v52_1 value_13;
assume v56_1 = tmp_to_use_4 && true;
split v57_1 tmp_to_use_5 v55_1 51;
join value_14 0@uint64 19@uint64;
mul v58_1 v57_1 value_14;
add v59_1 v47_1 v58_1;
join value_15 0@uint64 2251799813685247@uint64;
and v60_1@uint128 v55_1 value_15;
assume v60_1 = tmp_to_use_5 && true;
split v61_1 tmp_to_use_6 v59_1 51;
add v62_1 v50_1 v61_1;
join value_16 0@uint64 2251799813685247@uint64;
and v63_1@uint128 v59_1 value_16;
assume v63_1 = tmp_to_use_6 && true;
vpc v64_1@uint64 v63_1;
vpc v65_1@uint64 v62_1;
vpc v66_1@uint64 v53_1;
vpc v67_1@uint64 v56_1;
vpc v68_1@uint64 v60_1;
{ v64_1 + (v65_1 * 2251799813685248) + (v66_1 * 5070602400912917605986812821504) + (v67_1 * 11417981541647679048466287755595961091061972992) + (v68_1 * 25711008708143844408671393477458601640355247900524685364822016) = (a0_0 + (a1_0 * 2251799813685248) + (a2_0 * 5070602400912917605986812821504) + (a3_0 * 11417981541647679048466287755595961091061972992) + (a4_0 * 25711008708143844408671393477458601640355247900524685364822016)) * (a0_0 + (a1_0 * 2251799813685248) + (a2_0 * 5070602400912917605986812821504) + (a3_0 * 11417981541647679048466287755595961091061972992) + (a4_0 * 25711008708143844408671393477458601640355247900524685364822016)) (mod 57896044618658097711785492504343953926634992332820282019728792003956564819968 - 19) && and [v47_1 = tmp_to_use_1, v50_1 = tmp_to_use_2, v53_1 = tmp_to_use_3, v56_1 = tmp_to_use_4, v60_1 = tmp_to_use_5, v63_1 = tmp_to_use_6, v64_1 <u 2251799813685248@64, v65_1 <u 2251799813718016@64, v66_1 <u 2251799813685248@64, v67_1 <u 2251799813685248@64, v68_1 <u 2251799813685248@64] }